# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true

    - name: Add poetry to path
      run: export PATH=@PATH:$HOME/.local/bin
              
    - name: Install dependencies
      run: poetry install --no-root

    - name: check poetry
      run: poetry debug info

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs 
        key: ${{ runner.os }}-venv

  lint:
  
    needs: build
      
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app/

    steps:

    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true
        
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs 
        key: ${{ runner.os }}-venv
    - run: |
        poetry run task lint

  formatter:
    needs: build
      
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app/

    steps:

    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true
        
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs 
        key: ${{ runner.os }}-venv
        
    - run: |
        poetry run task formatter

  security:
    needs: build
      
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app/
        
    steps:

    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv

    - run: |
        poetry run task lint
              
  tests:
    
    needs: [build, lint, formatter]
      
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app/

    steps:

    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true
        
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs 
        key: ${{ runner.os }}-venv
    - run: |
        poetry run task test
